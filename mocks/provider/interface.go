// Code generated by MockGen. DO NOT EDIT.
// Source: provider/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIndexer is a mock of Indexer interface.
type MockIndexer struct {
	ctrl     *gomock.Controller
	recorder *MockIndexerMockRecorder
}

// MockIndexerMockRecorder is the mock recorder for MockIndexer.
type MockIndexerMockRecorder struct {
	mock *MockIndexer
}

// NewMockIndexer creates a new mock instance.
func NewMockIndexer(ctrl *gomock.Controller) *MockIndexer {
	mock := &MockIndexer{ctrl: ctrl}
	mock.recorder = &MockIndexerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndexer) EXPECT() *MockIndexerMockRecorder {
	return m.recorder
}

// GetCurrentBlock mocks base method.
func (m *MockIndexer) GetCurrentBlock() uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentBlock")
	ret0, _ := ret[0].(uint64)
	return ret0
}

// GetCurrentBlock indicates an expected call of GetCurrentBlock.
func (mr *MockIndexerMockRecorder) GetCurrentBlock() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentBlock", reflect.TypeOf((*MockIndexer)(nil).GetCurrentBlock))
}

// ScanBlocks mocks base method.
func (m *MockIndexer) ScanBlocks() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ScanBlocks")
}

// ScanBlocks indicates an expected call of ScanBlocks.
func (mr *MockIndexerMockRecorder) ScanBlocks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScanBlocks", reflect.TypeOf((*MockIndexer)(nil).ScanBlocks))
}
